# Joel Krueger 8-6-2023
# This code is for an EcoPlug WiFi outlet I bought on sale from Home Depot years ago
# I did have to solder wires to the ESP8266 and flash the firmware onto the processor, 
# now all updates are done over the air (OTA) though Home Assistant

esphome:
  name: plug1
  friendly_name: Plug1

esp8266:
  board: esp01_1m

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "EevKCpQBLrASVs9BZ6OKfitCXhdhYi7VPjP3YDzSIjY="

ota:
  password: "3dcb353de0bd7836c53c0fa8cba1cd3e"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  manual_ip:
    static_ip: 192.168.4.62
    gateway: 192.168.4.1
    subnet: 255.255.255.0
  fast_connect: true

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Plug1 Fallback Hotspot"
    password: ""

captive_portal:

# Example configuration entry with 2 sensors and filter
sensor:
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 300s
    entity_category: "diagnostic"

  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
    
switch:
  - platform: gpio
    pin: GPIO15
    name: relay
    id: relay
    restore_mode: ALWAYS_ON  # outlet is on after power up

output:
  - platform: gpio
    pin:
      number: GPIO02
      inverted: True
    id: led

binary_sensor:
  - platform: gpio
    pin: 
      number: GPIO13
      inverted: True
    name: button
    on_press:
      then:
        - switch.toggle: relay
        
interval:
  - interval: 5s
    then:
      if:
        condition:
          wifi.connected:
        then:
          - if:
              condition:
                api.connected:
              then:                   # wifi and home assistant connected
                - output.turn_on: led
                - delay: 100ms
                - output.turn_off: led
                - delay: 100ms
              else:                   # wifi connected but no home assistant
                - output.turn_on: led
                - delay: 500ms
                - output.turn_off: led
                - delay: 500ms
                - output.turn_on: led
                - delay: 500ms
                - output.turn_off: led
                - delay: 500ms
                - output.turn_on: led
                - delay: 500ms
                - output.turn_off: led
                - delay: 500ms
        else:
          - output.turn_off: led      # no wifi connected